tm.stagep.mean$weight <- sapply(tm.stagep.mean$weight, function(x) 100*x)
pdf("./Figures/TCGA_SKCM_TM_mutsigs_prog_avgbarplot.pdf", w=13, h=6)
ggplot(tm.stagep.mean, aes(x=Signatures, y=weight)) +
scale_fill_manual(values=colors4) +
geom_bar(stat="identity", aes(fill=Progression), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM TM by disease progression") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5)) +
coord_cartesian(ylim=c(0,60), expand = FALSE)
dev.off()
# Loop over each signature, by stage
# Data frame for t-test output
tm.prog.ttest <- data.frame(Signature=colnames(tm.stage)[4:27], t=NA, df=NA, pval = NA)
tm.prog.ttest <- data.frame(Signature=colnames(tm.stage)[4:27], t=NA, df=NA, pval = NA)
for (i in 4:27) {
sig <- noquote(colnames(tm.stage[i]))
var <- na.omit(data.frame(Progression=pt.stage$earlyLate, weight=pt.stage[,i]))
title <- paste0("SKCM TM ", sig, " contribution by disease progression")
file <- paste0("./Figures/TCGA_SKCM_TM_prog_", sig, ".pdf")
early <- var[which(var$Progression == "early"),]
late <- var[which(var$Progression == "late"),]
ttest <- t.test(early$weight, late$weight)
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),2] <- ttest$statistic
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),3] <- ttest$parameter
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),4] <- ttest$p.value
#tm.prog.ttest[which(tm.prog.ttest$Signature==sig),5] <- ttest$conf.int
#tm.prog.ttest[which(tm.prog.ttest$Signature==sig),6] <- ttest$estimate
pdf(file, w=7, h=5)
plot <- ggplot(var, aes(x=Progression, y=weight*100)) +
#geom_bar(stat="identity", fill="blue") +
geom_boxplot() +
ggtitle(title) +
xlab("Disease progression") +
ylab("Contribution (%)")
print(plot)
dev.off()
}
tm.prog.ttest$padj <- p.adjust(pt.prog.ttest$pval, method="BH")
tm.prog.ttest
tm.prog.ttest <- data.frame(Signature=colnames(tm.stage)[4:27], t=NA, df=NA, pval = NA)
for (i in 4:27) {
sig <- noquote(colnames(tm.stage[i]))
var <- na.omit(data.frame(Progression=tm.stage$earlyLate, weight=tm.stage[,i]))
title <- paste0("SKCM TM ", sig, " contribution by disease progression")
file <- paste0("./Figures/TCGA_SKCM_TM_prog_", sig, ".pdf")
early <- var[which(var$Progression == "early"),]
late <- var[which(var$Progression == "late"),]
ttest <- t.test(early$weight, late$weight)
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),2] <- ttest$statistic
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),3] <- ttest$parameter
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),4] <- ttest$p.value
#tm.prog.ttest[which(tm.prog.ttest$Signature==sig),5] <- ttest$conf.int
#tm.prog.ttest[which(tm.prog.ttest$Signature==sig),6] <- ttest$estimate
pdf(file, w=7, h=5)
plot <- ggplot(var, aes(x=Progression, y=weight*100)) +
#geom_bar(stat="identity", fill="blue") +
geom_boxplot() +
ggtitle(title) +
xlab("Disease progression") +
ylab("Contribution (%)")
print(plot)
dev.off()
}
tm.prog.ttest$padj <- p.adjust(tm.prog.ttest$pval, method="BH")
tm.prog.ttest
write.csv(tm.prog.ttest, file="./Output/TCGA_SKCM_TM_prog_eachsigttest.csv")
write.csv(tm.prog.ttest, file="./Output/TCGA_SKCM_TM_prog_eachsigttest.csv")
colnames(tm.stage[4:30])
colnames(tm.stage[4:25])
colnames(tm.stage[4:29])
colnames(tm.stage)
colnames(tm.clin)
# Get just id, cancer stage, and sigs
tm.stage <- tm.clin[, c(1:2, 47, 71:101)]
colnames(tm.stage)
tm.stage$stage <- sapply(tm.stage$pathologic_stage, function(x) toupper(strsplit(x,"\\ ")[[1]][2]))
# Loop to remove a, b, c specifications of cancer stage
for (i in 1:nrow(tm.stage)) {
if (grepl("a", tm.stage$stage[i], ignore.case = TRUE) | grepl("b", tm.stage$stage[i], ignore.case = TRUE) |
grepl("c", tm.stage$stage[i], ignore.case = TRUE)) {
tm.stage$stage[i] <- substr(tm.stage$stage[i], 1, nchar(tm.stage$stage[i])-1)
}
else {
tm.stage$stage[i] <- tm.stage$stage[i]
}
}
# Add column for early/late stage
tm.stage$earlyLate <- tm.stage$stage
for (i in 1:nrow(tm.stage)) {
if (is.na(tm.stage$earlyLate[i])){
tm.stage$earlyLate[i] <- NA
}
else if (tm.stage$earlyLate[i] == 0 | tm.stage$earlyLate[i] == "I" | tm.stage$earlyLate[i] == "II") {
tm.stage$earlyLate[i] <- "early"
}
else if (tm.stage$earlyLate[i] == "III" | tm.stage$earlyLate[i] == "IV") {
tm.stage$earlyLate[i] <- "late"
}
}
table(tm.stage$stage,useNA="al")
# Remove patients with pathological stage = i/ii nos (13/104)
tm.stage <- tm.stage[-which(tm.stage$stage == "NOS"),]
save(tm.stage, file="./Output/TCGA_SKCM_TM_stage.RData")
colnames(tm.stage)
## Overview
tm.stage.melt <- melt(tm.stage[,c(2, 4:35)])
head(tm.stage.melt)
unique(tm.stage.melt$variable)
colnames(tm.stage.melt) <- c("PatientId", "Stage", "Signatures", "weight")
tm.stage.melt$weight <- sapply(tm.stage.melt$weight, function(x) 100*x)
tm.early.late.melt <- melt(tm.stage[,c(2,4:34,36)])
unique(tm.stage.melt$variable)
unique(tm.early.late.melt$variable)
head(tm.early.late.melt)
colnames(tm.early.late.melt) <- c("PatientId", "earlyLate", "Signatures", "weight")
tm.early.late.melt$weight <- sapply(tm.early.late.melt$weight, function(x) 100*x)
pdf("./Figures/TCGA_SKCM_TM_mutsigs_stage_barplot.pdf", w=13, h=6)
ggplot(tm.stage.melt, aes(x=Signatures, y=weight)) +
scale_fill_manual(values=colors6) +
geom_bar(stat="identity", aes(fill=Stage), position="dodge") +
ggtitle("Mutational signature contributions SKCM TM by cancer stage") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5)) +
coord_cartesian( ylim=c(0,100), expand = FALSE )
dev.off()
# Mean sig barplot per stage
# Extract mean sig per cancer stage
tm.stagex <- tm.stage[,c(4:28)]
head(tm.stagex)
# Mean sig barplot per stage
# Extract mean sig per cancer stage
tm.stagex <- tm.stage[,c(4:34)]
head(tm.stagex)
# Mean sig barplot per stage
# Extract mean sig per cancer stage
tm.stagex <- tm.stage[,c(4:35)]
head(tm.stagex)
rownames(tm.stagex) <- tm.stage[,2]
head(tm.stagex)
tm.stage.mean <- sapply(tm.stagex[, 1:31], function(x) tapply(x, tm.stagex[, 32], mean))
colnames(tm.stage.mean) <- c("Stage", "Signatures", "weight")
tm.stage.mean$weight <- sapply(tm.stage.mean$weight, function(x) 100*x)
head(tm.stage.mean)
tm.stage.mean <- melt(tm.stage.mean)
head(tm.stage.mean)
colnames(tm.stage.mean) <- c("Stage", "Signatures", "weight")
tm.stage.mean$weight <- sapply(tm.stage.mean$weight, function(x) 100*x)
head(tm.stage.mean)
ggplot(tm.stage.mean, aes(x=Signatures, y=weight)) +
scale_fill_manual(values=colors6) +
geom_bar(stat="identity", aes(fill=Stage), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM TM by cancer stage") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5)) +
coord_cartesian(ylim=c(0,60), expand = FALSE)
pdf("./Figures/TCGA_SKCM_TM_mutsigs_stage_avgbarplot.pdf", w=13, h=6)
ggplot(tm.stage.mean, aes(x=Signatures, y=weight)) +
scale_fill_manual(values=colors6) +
geom_bar(stat="identity", aes(fill=Stage), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM TM by cancer stage") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5)) +
coord_cartesian(ylim=c(0,60), expand = FALSE)
dev.off()
# Mean sig barplot per progression
tm.stagep <- tm.stage[,c(4:34, 36)]
rownames(tm.stagep) <- tm.stage[,2]
tm.stagep.mean <- sapply(tm.stagep[, 1:31], function(x) tapply(x, tm.stagep[, 32], mean))
tm.stagep.mean <- sapply(tm.stagep[, 1:31], function(x) tapply(x, tm.stagep[, 32], mean))
tm.stagep.mean <- melt(tm.stagep.mean)
colnames(tm.stagep.mean) <- c("Progression", "Signatures", "weight")
tm.stagep.mean$weight <- sapply(tm.stagep.mean$weight, function(x) 100*x)
ggplot(tm.stagep.mean, aes(x=Signatures, y=weight)) +
scale_fill_manual(values=colors4) +
geom_bar(stat="identity", aes(fill=Progression), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM TM by disease progression") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5)) +
coord_cartesian(ylim=c(0,60), expand = FALSE)
head(tm.stage)
# Loop over each signature, by stage
# Data frame for t-test output
tm.prog.ttest <- data.frame(Signature=colnames(tm.stage)[4:35], t=NA, df=NA, pval = NA)
for (i in 4:35) {
sig <- noquote(colnames(tm.stage[i]))
var <- na.omit(data.frame(Progression=tm.stage$earlyLate, weight=tm.stage[,i]))
title <- paste0("SKCM TM ", sig, " contribution by disease progression")
file <- paste0("./Figures/TCGA_SKCM_TM_prog_", sig, ".pdf")
early <- var[which(var$Progression == "early"),]
late <- var[which(var$Progression == "late"),]
ttest <- t.test(early$weight, late$weight)
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),2] <- ttest$statistic
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),3] <- ttest$parameter
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),4] <- ttest$p.value
#tm.prog.ttest[which(tm.prog.ttest$Signature==sig),5] <- ttest$conf.int
#tm.prog.ttest[which(tm.prog.ttest$Signature==sig),6] <- ttest$estimate
pdf(file, w=7, h=5)
plot <- ggplot(var, aes(x=Progression, y=weight*100)) +
#geom_bar(stat="identity", fill="blue") +
geom_boxplot() +
ggtitle(title) +
xlab("Disease progression") +
ylab("Contribution (%)")
print(plot)
dev.off()
}
tm.prog.ttest$padj <- p.adjust(tm.prog.ttest$pval, method="BH")
i
sig <- noquote(colnames(tm.stage[i]))
var <- na.omit(data.frame(Progression=tm.stage$earlyLate, weight=tm.stage[,i]))
title <- paste0("SKCM TM ", sig, " contribution by disease progression")
file <- paste0("./Figures/TCGA_SKCM_TM_prog_", sig, ".pdf")
early <- var[which(var$Progression == "early"),]
late <- var[which(var$Progression == "late"),]
ttest <- t.test(early$weight, late$weight)
head(early)
head(late)
colnames(tm.stage[4:35])
# Loop over each signature, by stage
# Data frame for t-test output
tm.prog.ttest <- data.frame(Signature=colnames(tm.stage)[4:34], t=NA, df=NA, pval = NA)
tm.prog.ttest
for (i in 4:34) {
sig <- noquote(colnames(tm.stage[i]))
var <- na.omit(data.frame(Progression=tm.stage$earlyLate, weight=tm.stage[,i]))
title <- paste0("SKCM TM ", sig, " contribution by disease progression")
file <- paste0("./Figures/TCGA_SKCM_TM_prog_", sig, ".pdf")
early <- var[which(var$Progression == "early"),]
late <- var[which(var$Progression == "late"),]
ttest <- t.test(early$weight, late$weight)
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),2] <- ttest$statistic
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),3] <- ttest$parameter
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),4] <- ttest$p.value
#tm.prog.ttest[which(tm.prog.ttest$Signature==sig),5] <- ttest$conf.int
#tm.prog.ttest[which(tm.prog.ttest$Signature==sig),6] <- ttest$estimate
pdf(file, w=7, h=5)
plot <- ggplot(var, aes(x=Progression, y=weight*100)) +
#geom_bar(stat="identity", fill="blue") +
geom_boxplot() +
ggtitle(title) +
xlab("Disease progression") +
ylab("Contribution (%)")
print(plot)
dev.off()
}
tm.prog.ttest$padj <- p.adjust(tm.prog.ttest$pval, method="BH")
tm.prog.ttest
tm.prog <- noquote(colnames(tm.stage[4]))
var
sig
sig <- noquote("S1")
var <- na.omit(data.frame(Progression=tm.stage$stage, weight=tm.stage[,4]))
plot <- ggplot(var, aes(x=Progression, y=weight*100)) +
#geom_bar(stat="identity", fill="blue") +
geom_boxplot() +
ggtitle(title) +
xlab("Disease progression") +
ylab("Contribution (%)")
print(plot)
t.test(var)
var
pt.prog.ttest
# Loop over each signature, by stage
# Data frame for t-test output
tm.prog.ttest <- data.frame(Signature=colnames(tm.stage)[4:34], t=NA, df=NA, pval = NA)
pt.prog.ttest
for (i in 4:34) {
sig <- noquote(colnames(tm.stage[i]))cance
var <- na.omit(data.frame(Progression=tm.stage$earlyLate, weight=tm.stage[,i]))
title <- paste0("SKCM TM ", sig, " contribution by disease progression")
file <- paste0("./Figures/TCGA_SKCM_TM_prog_", sig, ".pdf")
early <- var[which(var$Progression == "early"),]
late <- var[which(var$Progression == "late"),]
ttest <- t.test(early$weight, late$weight)
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),2] <- ttest$statistic
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),3] <- ttest$parameter
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),4] <- ttest$p.value
#tm.prog.ttest[which(tm.prog.ttest$Signature==sig),5] <- ttest$conf.int
#tm.prog.ttest[which(tm.prog.ttest$Signature==sig),6] <- ttest$estimate
pdf(file, w=7, h=5)
plot <- ggplot(var, aes(x=Progression, y=weight*100)) +
#geom_bar(stat="identity", fill="blue") +
geom_boxplot() +
ggtitle(title) +
xlab("Disease progression") +
ylab("Contribution (%)")
print(plot)
dev.off()
}
tm.prog.ttest$padj <- p.adjust(tm.prog.ttest$pval, method="BH")
write.csv(tm.prog.ttest, file="./Output/TCGA_SKCM_TM_prog_eachsigttest.csv")
for (i in 4:34) {
sig <- noquote(colnames(tm.stage[i]))
var <- na.omit(data.frame(Progression=tm.stage$earlyLate, weight=tm.stage[,i]))
title <- paste0("SKCM TM ", sig, " contribution by disease progression")
file <- paste0("./Figures/TCGA_SKCM_TM_prog_", sig, ".pdf")
early <- var[which(var$Progression == "early"),]
late <- var[which(var$Progression == "late"),]
ttest <- t.test(early$weight, late$weight)
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),2] <- ttest$statistic
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),3] <- ttest$parameter
tm.prog.ttest[which(tm.prog.ttest$Signature==sig),4] <- ttest$p.value
#tm.prog.ttest[which(tm.prog.ttest$Signature==sig),5] <- ttest$conf.int
#tm.prog.ttest[which(tm.prog.ttest$Signature==sig),6] <- ttest$estimate
pdf(file, w=7, h=5)
plot <- ggplot(var, aes(x=Progression, y=weight*100)) +
#geom_bar(stat="identity", fill="blue") +
geom_boxplot() +
ggtitle(title) +
xlab("Disease progression") +
ylab("Contribution (%)")
print(plot)
dev.off()
}
tm.prog.ttest$padj <- p.adjust(tm.prog.ttest$pval, method="BH")
write.csv(tm.prog.ttest, file="./Output/TCGA_SKCM_TM_prog_eachsigttest.csv")
tm.prog.ttest
sig <- noquote("S7")
var <- na.omit(data.frame(Progression=pt.stage$earlyLate, weight=pt.stage[,i]))
title <- paste0("SKCM PT ", sig, " contribution by disease progression")
file <- paste0("./Figures/TCGA_SKCM_PT_prog_", sig, ".pdf")
early <- var[which(var$Progression == "early"),]
late <- var[which(var$Progression == "late"),]
ttest <- t.test(early$weight, late$weight)
ttest
early <- var[which(var$Progression == "early"),]
late <- var[which(var$Progression == "late"),]
ttest <- t.test(early$weight, late$weight)
ttest
sig
var <- na.omit(data.frame(Progression=pt.stage$earlyLate, weight=pt.stage[,i]))
i <- 10
sig <- noquote(colnames(pt.stage[i]))
sig
var <- na.omit(data.frame(Progression=pt.stage$earlyLate, weight=pt.stage[,i]))
title <- paste0("SKCM PT ", sig, " contribution by disease progression")
file <- paste0("./Figures/TCGA_SKCM_PT_prog_", sig, ".pdf")
early <- var[which(var$Progression == "early"),]
late <- var[which(var$Progression == "late"),]
ttest <- t.test(early$weight, late$weight)
ttest
head(pt)
head(tm)
?max
pt$max <- sapply(pt, max)
pt$max <- sapply(pt, function(x) max(x))
?max
head(pt[,1:24])
pt$max <- sapply(pt, function(x) colnames(max(pt[24])))
pt$max <- sapply(pt, function(x) colnames(max(pt[,1:24])))
colnames(max(pt[1,24]))
colnames(max(pt[,1:24]))
max(pt[,1:24])
max(pt[1,1:24])
pt[1,]
colnames(max(pt[1,1:24]))
pt$max <- sapply(pt, function(x) colnames(max(pt[x,1:24])))
colnames(pt)[max.col(pt,ties.method="first")]
colnames(pt)[max.col(pt]
colnames(pt)[max.col(pt)]
colnames(pt[apply(pt,1,which.max)])
warnings()
head(pt)
max(pt[x,1:24])
max(pt[1,1:24])
colnames(pt[,which(pt[,1] == max(pt[1,1:24])))
colnames(pt[,which(pt[,1] == max(pt[1,1:24])))
colnames(pt[,which(pt[,1] == max(pt[1,1:24]))])
pt[,which(pt[1,]== max(pt[1,1:24]))]
colnames(pt[,which(pt[1,]== max(pt[1,1:24]))])
head(pt)
pt$max <- sapply(pt, function(x) max(pt[x, 1:24])
)
pt.max <- pt
head(pt.max)
pt.max[, 25]
pt.max <- pt.max[, -25]
head(pt.max)
pt.max$max <- sapply(pt.max, function(x) max(pt.max[x,1:24]))
pt.max$max <- max(pt.max[,1:24])
head(pt.max)
pt.max$max <- sapply(pt.max, function(x) max(pt.max[x,1:25]))
head(pt.max)
pt.max <- pt[,-25]
head(pt.max)
pt.max$max <- sapply(nrow(pt.max), function(x) max(pt.max[x, 1:24]))
head(pt.max)
max(pt.max[104, 1:24])
pt.max$max <- sapply(1:nrow(pt.max), function(x) max(pt.max[x, 1:24]))
head(pt.amx)
head(pt.max)
colnames(pt.max[,which(pt.max[1,]==pt.max$max[1])])
colnames(pt.max[,which(pt.max[1,]==pt.max$max[1])])[1]
pt.max$max1 <- sapply(1:nrow(pt.max) , function(x) noquote(colnames(pt.max[,which(pt.max[x,]==pt.max$max[x])])[1]))
head(pt.max)
pt.max[,31]
pt.max[,25]
colnames(pt.max[,25])
colnames(pt.max[25])
colnames(pt.max[26])
pt.max <- pt.max[,-26]
head(pt.max)
pt.max$maxSig <- sapply(1:nrow(pt.max) , function(x) noquote(colnames(pt.max[,which(pt.max[x,]==pt.max$max[x])])[1]))
head(pt.max)
head(tm)
colnames(tm[32])
# Extract dominant signature per patient in TM
tm.max <- tm[,-32]
tm.max$max <- sapply(1:nrow(tm.max), function(x) max(pt.max[x, 1:31]))
ncol(tm.max)
tm.max$max <- sapply(1:nrow(tm.max), function(x) max(tm.max[x, 1:31]))
ncol(tm.max)
head(tm.max)
tm.max$maxSig <- sapply(1:nrow(tm.max) , function(x) noquote(colnames(tm.max[,which(tm.max[x,]==tm.max$max[x])])[1]))
head(tm.max)
table(pt.max$maxSig)
table(tm.max$maxSig)
pt.domsigs <- table(pt.max$maxSig)
head(pt.domsigs)
pt.domsigs
table(pt.max$maxSig, useNA="al")
typeof(pt.domsings)
typeof(pt.domsigs)
tm.domsigs <- as.data.frame(table(tm.max$maxSig))
head(tm.domsis)
head(tm.domsigs)
pt.domsigs <- as.data.frame(table(pt.max$maxSig))
head(pt.domsigs)
domsig <- merge(pt.domsigs, tm.domsigs, by="Var1", all=TRUE)
domsig
domsig[is.na(domsig)] <- 0
domsig
tm.domsigs
pt.domsigs
domsig <- domsig[match(order,merged$Var1),]
domsig
domsig <- merge(pt.domsigs, tm.domsigs, by="Var1", all=TRUE)
domsig[is.na(domsig)] <- 0
domsig
colnames(domsig) <- c("Signature", "SKCM_PT", "SKCM_TM")
domsig
head(order)
domsig <- domsig[match(order,domsig$Signature),]
domsig
domsig <- merge(pt.domsigs, tm.domsigs, by="Var1", all=TRUE)
domsig[is.na(domsig)] <- 0
colnames(domsig) <- c("Signature", "SKCM_PT", "SKCM_TM")
domsig
domsig <- domsig[match(c("S1","S3","S6," "S7", "S15", "S16", "S18", "S20," "S21", "S26"),domsig$Signature),]
domsig <- domsig[match(c("S1","S3","S6","S7","S15","S16","S18","S20","S21","S26"),domsig$Signature),]
domsig
array(10, 20, 39,49, ncol=2)
?array
array(10, 20, 39,49, c(2,2))
array(c(10, 20, 39,49), c(2,2))
domsig[1,1]
domsig[1,2]
domsig[1,3]
p <- domsig[1,2]
m <- domsig[1,3]
p
m
sump <- colSums(domsig[2])
sump
sump <- colSums(domsig[2])-p
sump
mat <- array(c(p, m, sump, summ), c(2,2))
summ <- colSums(domsig[3])-m
mat <- array(c(p, m, sump, summ), c(2,2))
mat
p
m
sump
summ
mat <- array(c(p, sump, m, summ), c(2,2))
mat
?fisher.test
fisher.test(mat)
str(fisher.test(mat))
# Generates contingency tables and runs Fisher's exact test
fisher <- data.frame(Signature=domsig$Signature, OR=NA, pval=NA, padj=NA)
fisher.test(mat)$p.value
fisher.test(mat)$estimate
fisher.test(mat)$estimate[1]
length(fisher.test(mat)$estimate)
dim(fisher.test(mat)$estimate)
# Generates contingency tables and runs Fisher's exact test
fisher <- data.frame(Signature=domsig$Signature, OR=NA, pval=NA, padj=NA)
fisher
colnames(fisher[2])
fisher <- data.frame(Signature=domsig$Signature, OR=NA, pval=NA, padj=NA)
for (i in 1:nrow(domsig)) {
p <- domsig[i,2]
m <- domsig[i,3]
sump <- colSums(domsig[2])-p
summ <- colSums(domsig[3])-m
mat <- array(c(p, sump, m, summ), c(2,2))
fisher[i,2] <- fisher.test(mat)$estimate
fisher[i,3] <- fisher.test(mat)$p.value
}
fisher$padj <- p.adjust(fisher$pval, method="BH")
fisher
i
p
m
domsig
write.csv(fisher, file="./Output/TCGA_SKCM_fisher.csv")
