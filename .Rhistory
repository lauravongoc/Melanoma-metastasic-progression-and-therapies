ylab("Contribution (%)") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
pdf("./Figures/TCGA_UVM_PT_mutsig.pdf", w=10, h=6)
ggplot(melt_pt, aes(x=PatientId, y=weight, fill=Signature)) +
scale_fill_manual(values=colors) +
geom_bar(stat="identity") +
ggtitle("Mutational signature analysis UVM primary tumor ") +
xlab("Sample") +
ylab("Contribution (%)") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
coord_cartesian(ylim=c(0,100), expand=FALSE)
dev.off()
pdf("./Figures/TCGA_UVM_PT_mutsigs_boxplot.pdf", w=10, h=6)
ggplot(melt_pt, aes(x=Signature, y=weight)) +
geom_boxplot() +
ggtitle("Mutational signature analysis UVM primary tumor") +
xlab("Signatures") +
ylab("Contribution") +
coord_cartesian(ylim=c(0,100), expand=FALSE)
dev.off()
# Plot: heatmap
melted_pt$weight <- as.numeric(melted_pt$weight)
pt_mat <- acast(PatientId~Signature,data=melted_pt, value="weight", fun.aggregate=mean)
pdf("./Figures/TCGA_UVM_PT_mutsigs_heatmap.pdf", w=10, h=6, onefile=FALSE)
p_pt <- pheatmap(t(pt_mat), show_colnames = FALSE, main="Mutational signatures UVM primary tumor")
dev.off()
#### Mean contributions per signature ####
means <- data.frame(Signatures=c(colnames(trim_pt)), value=c(colMeans(trim_pt)*100))
ggplot(means, aes(x=reorder(Signatures, -value), y=value)) +
geom_bar(stat="identity", fill="dark blue") +
ggtitle("Mean mutational signature contributions UVM primary tumor") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5)) +
coord_cartesian(ylim=c(0,100), expand=FALSE)
pdf("./Figures/TCGA_UVM_PT_mutsigs_avg.pdf", w=12, h=6)
ggplot(means, aes(x=reorder(Signatures, -value), y=value)) +
geom_bar(stat="identity", fill="dark blue") +
ggtitle("Mean mutational signature contributions UVM primary tumor") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5)) +
coord_cartesian(ylim=c(0,100), expand=FALSE)
dev.off()
save(means, file="./Output/TCGA_UVM_PT_mutsigs_means.RData")
load("./Output/TCGA_SKCM_TP_mutsigs_means.RData")   # means.tp
load("./Output/TCGA_SKCM_TM_mutsigs_means.RData")   # means.tm
load("./Output/TCGA_UVM_TP_mutsigs_means.RData")    # means
colnames(means.tp)[2] <- "SKCM_TP"
save(weight_tp, file="./Output/TCGA_UVM_TP_weights_cut0.00.RData")
save(sigs_input_tp, file="./Output/TCGA_UVM_TP_mutsig_input.RData")
# Convert to deconstructSigs input:
sigs_input_tp <- mut.to.sigs.input(mut.ref = snvs_tp,
sample.id = "Tumor_Sample_Barcode",
chr = "Chromosome",
pos = "Start_Position",
ref = "Reference_Allele",
alt = "Tumor_Seq_Allele2",
bsg = BSgenome.Hsapiens.UCSC.hg38)
# Stores each type into separate variables
snvs_tp <- snvs[which(snvs$Sample_Type == "01"),]
snvs_met <- snvs[which(snvs$Sample_Type == "06"),]
# Convert to deconstructSigs input:
sigs_input_tp <- mut.to.sigs.input(mut.ref = snvs_tp,
sample.id = "Tumor_Sample_Barcode",
chr = "Chromosome",
pos = "Start_Position",
ref = "Reference_Allele",
alt = "Tumor_Seq_Allele2",
bsg = BSgenome.Hsapiens.UCSC.hg38)
save(sigs_input_tp, file="./Output/TCGA_UVM_TP_mutsig_input.RData")
# Signatures
weights_tp <- as.data.frame(t(sapply(rownames(sigs_input_tp),
function(x) whichSignatures(tumor.ref = sigs_input_tp,
signatures.ref = signatures.cosmic,
sample.id = x,
contexts.needed = TRUE,
signature.cutoff = 0.06,              # default = 0.06
tri.counts.method = 'default')$weights)),
row.names=rownames(sigs_input_tp))
weight_tp <- as.data.frame(sapply(weights_tp, function(x) unlist(x)), row.names = rownames(weights_tp))
# Change Signature.# to S#
colnames(weight_tp) <- sapply(colnames(weight_tp), function(x) paste0("S",strsplit(x, "\\.")[[1]][2]))
# Add unknown contribution column
weight_tp$unknown <- (1-rowSums(weight_tp))
save(weight_tp, file="./Output/TCGA_UVM_TP_weights_cut0.00.RData")
# Sort by S1 (descending)
sorted_tp <- weight_tp[order(-weight_tp$S1),]
# Reformatting the weights data
weight_tp <- as.matrix(weight_tp)
melted_tp <- melt(weight_tp)
colnames(melted_tp) <- c("PatientId", "Signature", "weight")
melted_tp$weight <- sapply(melted_tp$weight, function(x) 100*x)
# Remove non-contributing signatures
sorted_tp <- as.matrix(sorted_tp)
trim_tp <- sorted_tp[,which(colSums(sorted_tp)>0)]
melt_tp <- melt(trim_tp)
colnames(melt_tp) <- c("PatientId", "Signature", "weight")
melt_tp$weight <- sapply(melt_tp$weight, function(x) 100*x)
pdf("./Figures/TCGA_UVM_TP_mutsig.pdf", w=10, h=6)
ggplot(melt_tp, aes(x=PatientId, y=weight, fill=Signature)) +
scale_fill_manual(values=colors) +
geom_bar(stat="identity") +
ggtitle("Mutational signature analysis UVM primary tumor ") +
xlab("Sample") +
ylab("Contribution (%)") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
coord_cartesian(ylim=c(0,100), expand=FALSE)
dev.off()
pdf("./Figures/TCGA_UVM_TP_mutsigs_boxplot.pdf", w=10, h=6)
ggplot(melt_tp, aes(x=Signature, y=weight)) +
geom_boxplot() +
ggtitle("Mutational signature analysis UVM primary tumor") +
xlab("Signatures") +
ylab("Contribution") +
coord_cartesian(ylim=c(0,100), expand=FALSE)
dev.off()
melted_tp$weight <- as.numeric(melted_tp$weight)
tp_mat <- acast(PatientId~Signature,data=melted_tp, value="weight", fun.aggregate=mean)
pdf("./Figures/TCGA_UVM_TP_mutsigs_heatmap.pdf", w=10, h=6, onefile=FALSE)
p_tp <- pheatmap(t(tp_mat), show_colnames = FALSE, main="Mutational signatures UVM primary tumor")
dev.off()
#### Mean contributions per signature ####
means <- data.frame(Signatures=c(colnames(trim_tp)), value=c(colMeans(trim_tp)*100))
pdf("./Figures/TCGA_UVM_TP_mutsigs_avg.pdf", w=12, h=6)
ggplot(means, aes(x=reorder(Signatures, -value), y=value)) +
geom_bar(stat="identity", fill="dark blue") +
ggtitle("Mean mutational signature contributions UVM primary tumor") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5)) +
coord_cartesian(ylim=c(0,100), expand=FALSE)
dev.off()
save(means, file="./Output/TCGA_UVM_TP_mutsigs_means.RData")
load("./Output/TCGA_SKCM_TP_mutsigs_means.RData")   # means.tp
load("./Output/TCGA_SKCM_TM_mutsigs_means.RData")   # means.tm
load("./Output/TCGA_UVM_TP_mutsigs_means.RData")    # means
colnames(means.tp)[2] <- "SKCM_TP"
colnames(means.tm)[2] <- "SKCM_TM"
colnames(means)[2] <- "UVM_TP"
merged <- merge(means.tp, means.tm, by="Signatures", all=TRUE)
merged <- merge(merged, means, by="Signatures", all=TRUE)
merged[is.na(merged)] <- 0
# Ordered by signature number
order <- c(colnames(weight.tp))
merged <- merged[match(order,merged$Signatures),]
melt.merged <- melt(merged)
colnames(melt.merged) <- c("Signatures", "Sample", "value")
colors3 <- brewer.pal(3, "Paired")
pdf("./Figures/TCGA_SKCM_UVM_mutsigs_avg.pdf", w=13, h=6)
ggplot(melt,merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar(stat="identity", aes(fill=Sample), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5))
dev.off()
ggplot(melt,merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar(stat="identity", aes(fill=Sample), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5))
ggplot(melt.merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar(stat="identity", aes(fill=Sample), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5))
# Ordered by signature number
order <- c(colnames(weight.tp))
merged <- merged[match(order,merged$Signatures),]
merged
colnames(melt.merged) <- c("Signatures", "Sample", "value")
ggplot(melt.merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar(stat="identity", aes(fill=Sample), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5))
ggplot(melt.merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar(stat="identity", aes(fill=Sample), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5))
melt.merged
ggplot(melt.merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar(stat="identity", aes(fill=Sample), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)")
ggplot(melt.merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar(stat="identity", aes(fill=Sample), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5))
ggplot(melt.merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar(stat="identity", aes(fill=Sample), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5))
ggplot(melt.merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar(stat="identity", aes(fill=Sample)) +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5))
ggplot(melt.merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar( aes(fill=Sample), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5))
ggplot(melt.merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar(stat="identity", aes(fill=Sample), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5))
?geom_bar
ggplot(melt.merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar(stat="identity", aes(fill=Sample), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5))
pdf("./Figures/TCGA_SKCM_UVM_mutsigs_avg.pdf", w=13, h=6)
ggplot(melt.merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar(stat="identity", aes(fill=Sample), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5))
dev.off()
head(tp)
head(SKCM.clin)
colnames(SKCM.clin)
head(SKCM.clin$patient_id)
head(rownames(pt))
rownames(pt)
pt[1,]
head(rownames(tp))
head(SKCM.clin$patient_id)
head(SKCM.clin$tcga_participant_barcode)
tp$patient_id <- sapply(rownames(tp), function(x) as.factor(tolower(strsplit(x,"-")[[1]][3])))
tm$patient_id <- sapply(rownames(tm), function(x) as.factor(tolower(strsplit(x,"-")[[1]][3])))
matched <- merge(tp, tm, by="patient_id")       #none
matched
head(tp)
head(tm)
matched <- merge(tp, tm, by="patient_id")       #none
View(matched)
save(tp, file="./Output/TCGA_SKCM_TP_weights_trim_cut0.00.RData")
save(tm, file="./Output/TCGA_SKCM_TM_weights_trim_cut0.00.RData")
# Create variables with both clinical and signatures data
tp.clin <- merge(SKCM.clin, tp, by="patient_id")
tm.clin <- merge(SKCM.clin, tm, by="patient_id")
save(tp.clin, file="./Output/TCGA_SKCM_TP_clinical.RData")
save(tm.clin, file="./Output/TCGA_SKCM_TM_clinical.RData")
# Get just id, cancer stage, and sigs
tp.stage <- tp.clin[, c(1:2, 47, 71:94)]
head(tp.stage)
head(tp[,71:100])
ncol(tp.clin)
head(tp.clin[,71:100])
head(tp.clin[,71:101])
colnames(tp.clin)[71:101]
# Get just id, cancer stage, and sigs
tp.stage <- tp.clin[, c(1:2, 47, 71:101)]
head(tp.stage)
colnames(tp.stage)
tp.stage$stage <- sapply(tp.stage$pathologic_stage, function(x) toupper(strsplit(x,"\\ ")[[1]][2]))
tp.stage$stageNum <- tp.stage$stage
# Loop to remove a, b, c specifications of cancer stage
for (i in 1:nrow(tp.stage)) {
if (grepl("a", tp.stage$stage[i], ignore.case = TRUE) | grepl("b", tp.stage$stage[i], ignore.case = TRUE) |
grepl("c", tp.stage$stage[i], ignore.case = TRUE)) {
tp.stage$stage[i] <- substr(tp.stage$stage[i], 1, nchar(tp.stage$stage[i])-1)
}
else {
tp.stage$stage[i] <- tp.stage$stage[i]
}
}
head(tp.stage)
unique(tp.stage$pathologic_stage)
table(tp.stage$pathologic_stage)
table(tp.stage$stage)
2/104*100
# Add column for early/late stage
tp.stage$earlyLate <- tp.stage$stage
for (i in 1:nrow(tp.stage)) {
if (is.na(tp.stage$earlyLate[i])){
tp.stage$earlyLate[i] <- NA
}
else if (tp.stage$earlyLate[i] == "I" | tp.stage$earlyLate[i] == "II") {
tp.stage$earlyLate[i] <- "early"
}
else if (tp.stage$earlyLate[i] == "III" | tp.stage$earlyLate[i] == "IV") {
tp.stage$earlyLate[i] <- "late"
}
}
head(tp.stage)
colnames(tp.stage)[28]
# Loop for numeric version of stage
for (i in 1:nrow(tp.stage)){
if (is.na(tp.stage$stageNum[i])){
tp.stage$stageNum[i] <- 0
}
else if (tp.stage$stageNum[i] == "I") {
tp.stage$stageNum[i] <- 1
}
else if (tp.stage$stageNum[i] == "II") {
tp.stage$stageNum[i] <- 2
}
else if (tp.stage$stageNum[i] == "III") {
tp.stage$stageNum[i] <- 3
}
else if (tp.stage$stageNum[i] == "IV") {
tp.stage$stageNum[i] <- 4
}
}
head(tp.stage)
# Loop for numeric version of stage
tp.stage$stageNum <- tp.stage$stage
for (i in 1:nrow(tp.stage)){
if (is.na(tp.stage$stageNum[i])){
tp.stage$stageNum[i] <- 0
}
else if (tp.stage$stageNum[i] == "I") {
tp.stage$stageNum[i] <- 1
}
else if (tp.stage$stageNum[i] == "II") {
tp.stage$stageNum[i] <- 2
}
else if (tp.stage$stageNum[i] == "III") {
tp.stage$stageNum[i] <- 3
}
else if (tp.stage$stageNum[i] == "IV") {
tp.stage$stageNum[i] <- 4
}
}
head(tp.stage)
# Remove patient with pathological stage = i/ii nos (1/104)
tp.stage <- tp.stage[-which(tp.stage$stage == "NOS"),]
head(tp.stage)
save(tp.stage, file="./Output/TCGA_SKCM_TP_stage.RData")
for (i in 1:nrow(tp.stage)){
if (is.na(tp.stage$stageNum[i])){
tp.stage$stageNum[i] <- NA
}
else if (tp.stage$stageNum[i] == "I") {
tp.stage$stageNum[i] <- 1
}
else if (tp.stage$stageNum[i] == "II") {
tp.stage$stageNum[i] <- 2
}
else if (tp.stage$stageNum[i] == "III") {
tp.stage$stageNum[i] <- 3
}
else if (tp.stage$stageNum[i] == "IV") {
tp.stage$stageNum[i] <- 4
}
}
head(tp.stage)
tp.stage$stageNum <- tp.stage$stage
for (i in 1:nrow(tp.stage)){
if (is.na(tp.stage$stageNum[i])){
tp.stage$stageNum[i] <- NA
}
else if (tp.stage$stageNum[i] == "I") {
tp.stage$stageNum[i] <- 1
}
else if (tp.stage$stageNum[i] == "II") {
tp.stage$stageNum[i] <- 2
}
else if (tp.stage$stageNum[i] == "III") {
tp.stage$stageNum[i] <- 3
}
else if (tp.stage$stageNum[i] == "IV") {
tp.stage$stageNum[i] <- 4
}
}
head(tp.stage)
# Remove patient with pathological stage = i/ii nos (1/104)
tp.stage <- tp.stage[-which(tp.stage$stage == "NOS"),]
save(tp.stage, file="./Output/TCGA_SKCM_TP_stage.RData")
## Overview
tp.stage.melt <- melt(tp.stage)[,c(2,4:6)]
head(tp.stage.melt)
tp.stage.melt
head(tp.stage)
tp.stage
# Get just id, cancer stage, and sigs
tp.stage <- tp.clin[, c(1:2, 47, 71:101)]
head(tp.stage)
tp.stage$stage <- sapply(tp.stage$pathologic_stage, function(x) toupper(strsplit(x,"\\ ")[[1]][2]))
tp.stage$stageNum <- tp.stage$stage
# Loop to remove a, b, c specifications of cancer stage
for (i in 1:nrow(tp.stage)) {
if (grepl("a", tp.stage$stage[i], ignore.case = TRUE) | grepl("b", tp.stage$stage[i], ignore.case = TRUE) |
grepl("c", tp.stage$stage[i], ignore.case = TRUE)) {
tp.stage$stage[i] <- substr(tp.stage$stage[i], 1, nchar(tp.stage$stage[i])-1)
}
else {
tp.stage$stage[i] <- tp.stage$stage[i]
}
}
# Add column for early/late stage
tp.stage$earlyLate <- tp.stage$stage
for (i in 1:nrow(tp.stage)) {
if (is.na(tp.stage$earlyLate[i])){
tp.stage$earlyLate[i] <- NA
}
else if (tp.stage$earlyLate[i] == "I" | tp.stage$earlyLate[i] == "II") {
tp.stage$earlyLate[i] <- "early"
}
else if (tp.stage$earlyLate[i] == "III" | tp.stage$earlyLate[i] == "IV") {
tp.stage$earlyLate[i] <- "late"
}
}
# Loop for numeric version of stage
tp.stage$stageNum <- tp.stage$stage
for (i in 1:nrow(tp.stage)){
if (is.na(tp.stage$stageNum[i])){
tp.stage$stageNum[i] <- NA
}
else if (tp.stage$stageNum[i] == "I") {
tp.stage$stageNum[i] <- 1
}
else if (tp.stage$stageNum[i] == "II") {
tp.stage$stageNum[i] <- 2
}
else if (tp.stage$stageNum[i] == "III") {
tp.stage$stageNum[i] <- 3
}
else if (tp.stage$stageNum[i] == "IV") {
tp.stage$stageNum[i] <- 4
}
}
# Remove patient with pathological stage = i/ii nos (1/104)
tp.stage <- tp.stage[-which(tp.stage$stage == "NOS"),]
head(tp.stage)
save(tp.stage, file="./Output/TCGA_SKCM_TP_stage.RData")
## Overview
tp.stage.melt <- melt(tp.stage)[,c(2,4:6)]
tp.stage.melt
colnames(tp.stage.melt) <- c("PatientId", "Stage", "Signatures", "weight")
tp.stage.melt$weight <- sapply(tp.stage.melt$weight, function(x) 100*x)
tp.early.late.melt <- melt(tp.stage[,c(2,4:27,29)])
colnames(tp.early.late.melt) <- c("PatientId", "earlyLate", "Signatures", "weight")
head(tp.early.late.melt)
head(tp.stage.melt)
head(tp.stage[,c(2,4:27,29)])
head(tp.stage[,c(2,4:34,35)])
head(tp.stage[,c(2,4:34)])
head(tp.stage.melt)
head(tp.stage[,c(2,4:6)])
colnames(tp.stage)
head(tp.stage[,c(2,4:34,36)])
head(tp.stage[,c(2,4:34,37)])
tp.early.late.melt <- melt(tp.stage[,c(2,4:34,37)])
head(tp.early.late.melt)
colnames(tp.stage.melt) <- c("PatientId", "Stage", "Signatures", "weight")
head(tp.early.late.melt)
colnames(tp.early.late.melt) <- c("PatientId", "earlyLate", "Signatures", "weight")
head(tp.early.late.melt)
colnames(tp.stage)
## Overview
tp.stage.melt <- melt(tp.stage)[,c(2,4:35)]
colnames(tp.stage.melt) <- c("PatientId", "Stage", "Signatures", "weight")
tp.stage.melt$weight <- sapply(tp.stage.melt$weight, function(x) 100*x)
## Overview
tp.stage.melt <- melt(tp.stage)[,c(2,4:35)]
## Overview
tp.stage.melt <- melt(tp.stage)[,c(2,4:34)]
## Overview
tp.stage.melt <- melt(tp.stage)[,c(2,4:20)]
## Overview
tp.stage.melt <- melt(tp.stage)[,c(2,4:10)]
## Overview
tp.stage.melt <- melt(tp.stage)[,c(2,4:6)]
head(tp.stage)
head(tp.stage[,c(2,4:6)])
pdf("./Figures/TCGA_SKCM_UVM_mutsigs_avg.pdf", w=13, h=6)
ggplot(melt.merged, aes(x=Signatures, y=value)) +
scale_fill_manual(values=colors3) +
geom_bar(stat="identity", aes(fill=Sample), position="dodge") +
ggtitle("Mean mutational signature contributions SKCM and UVM") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5)) +
coord_cartesian(ylim=c(0,100), expand=FALSE)
dev.off()
