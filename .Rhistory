pdf(file, w=7, h=5)
plot <- ggplot(var, aes(x=Therapy, y=weight*100)) +
geom_bar(stat="identity", fill="blue") +
geom_boxplot() +
ggtitle(title) +
xlab("Therapy") +
ylab("Contribution (%)") +
coord_cartesian(ylim=c(0,100), expand = FALSE)
print(plot)
dev.off()
}
tm.ther.ttest$padj <- p.adjust(tm.prog.ttest$pval, method="BH")
write.csv(tm.ther.ttest, file="./Output/TCGA_SKCM_TM_ther_eachsigttest.csv")
# Loop over each signature, by therapy
# Data frame for t-test output
tm.ther.ttest <- data.frame(Signature=colnames(tm.ther)[6:36], t=NA, df=NA, pval = NA)
for (i in 6:36) {
sig <- noquote(colnames(tm.ther[i]))
#var <- na.omit(data.frame(Therapy=tm.stage$earlyLate, weight=tm.stage[,i]))
title <- paste0("SKCM TM ", sig, " contribution by therapy")
file <- paste0("./Figures/TCGA_SKCM_TM_ther_", sig, ".pdf")
radiation <- na.omit(data.frame(Therapy="radiation", weight=tm.radiation[,i]))
interferon <- na.omit(data.frame(Therapy="interferon", weight=tm.interferon[,i]))
var <- rbind(radiation, interferon)
ttest <- t.test(radiation$weight, interferon$weight)
tm.ther.ttest[which(tm.ther.ttest$Signature==sig),2] <- ttest$statistic
tm.ther.ttest[which(tm.ther.ttest$Signature==sig),3] <- ttest$parameter
tm.ther.ttest[which(tm.ther.ttest$Signature==sig),4] <- ttest$p.value
#tm.ther.ttest[which(tm.ther.ttest$Signature==sig),5] <- ttest$conf.int
#tm.ther.ttest[which(tm.ther.ttest$Signature==sig),6] <- ttest$estimate
pdf(file, w=7, h=5)
plot <- ggplot(var, aes(x=Therapy, y=weight*100)) +
#geom_bar(stat="identity", fill="blue") +
geom_boxplot() +
ggtitle(title) +
xlab("Therapy") +
ylab("Contribution (%)") +
coord_cartesian(ylim=c(0,100), expand = FALSE)
print(plot)
dev.off()
}
tm.ther.ttest$padj <- p.adjust(tm.prog.ttest$pval, method="BH")
write.csv(tm.ther.ttest, file="./Output/TCGA_SKCM_TM_ther_eachsigttest.csv")
test <- tm.radiation[,6:9]
test
head(test)
ncol(test)
sigss <- colnames(test)
sigss
sigss <- noquote(colnames(test))
sigss
for (i in 1:(ncol(test)-1)) {
for (j in (i:1):4) {
print(test[i,j])
}
}
for (i in 1:(ncol(test)-1)) {
for (j in (i+1):4) {
print(colnames(test[,i]))
print(colnames(test[,j]))
}
}
i
colnames(test)[i]
for (i in 1:(ncol(test)-1)) {
for (j in (i+1):4) {
print(colnames(test))[i]
print(colnames(test))[j]
}
}
for (i in 1:(ncol(test)-1)) {
for (j in (i+1):4) {
print(colnames(test)[i])
print(colnames(test)[j])
}
}
?data.frame
noquote(order)
df.test <- data.frame(matrix(NA, nrow=31, ncol=31))
dim(df.test)
head(df.test)
colnames(df.test) <- noquote(order)
head(df.test)
rownames(df.test) <- noquote(order)
head(df.test)
df.test <- data.frame(matrix(NA, nrow=31, ncol=31), row.names=noquote(order))
head(df.test)
df.test <- data.frame(matrix(NA, nrow=31, ncol=31), row.names=noquote(order), names=noquote(order))
head(df.test)
df.test <- data.frame(matrix(NA, nrow=31, ncol=31), row.names=noquote(order), col.names=noquote(order))
head(df.test)
df.test <- data.frame(matrix(NA, nrow=31, ncol=31), row.names=noquote(order))
colnames(df.test) <- noquote(order)
head(df.test)
i
head(test)
t.test(test$S1, test$S2)$p.value
df.test[i,j] <- t.test(test[,i], test[,j])$p.value
for (i in 1:(ncol(test)-1)) {
for (j in (i+1):4) {
print(colnames(test)[i])
print(colnames(test)[j])
df.test[i,j] <- t.test(test[,i], test[,j])$p.value
}
}
t.test(test$S1, test$S2)$p.value
head(df.test)
colnames(tm.radiation[,6:36])
rm(sigss)
# ttest by pair of signatures per therapy
# radiation
tm.radiation.t <- tm.radiation[,6:36]
tm.radiation.t.df <- data.frame(matrix(NA, nrow=31, ncol=31), row.names=noquote(order))
colnames(tm.radiation.t.df) <- noquote(order)
for (i in 1:(ncol(tm.radiation.t)-1)) {
for (j in (i+1):4) {
tm.radiation.t.df[i,j] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
}
}
head(tm.radiation.t.df)
for (i in 1:(ncol(tm.radiation.t)-1)) {
for (j in (i+1):31) {
tm.radiation.t.df[i,j] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
}
}
head(tm.radiation.t.df)
View(tm.radiation.t.df)
for (i in 1:(ncol(tm.radiation.t)-1)) {
for (j in (i+1):ncol(tm.radiation.t)) {
tm.radiation.t.df[i,j] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
}
}
View(tm.radiation.t.df)
ncol(tm.radiation.t)
tm.radiation.t.df <- data.frame(matrix(NA, nrow=31, ncol=31), row.names=noquote(order))
colnames(tm.radiation.t.df) <- noquote(order)
for (i in 1:(ncol(tm.radiation.t)-1)) {
for (j in (i+1):ncol(tm.radiation.t)) {
tm.radiation.t.df[i,j] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
}
}
View(tm.radiation.t.df)
write.csv(tm.radiation.t.df, file="./Output/TCGA_SKCM_TM_radiation_eachsigttest.csv")
tm.radiation.t.dfadj <- p.adjust(tm.radiation.t.df, method="BH")
typeof(tm.radiaiton.t.df[1,2])
typeof(tm.radiation.t.df[1,2])
# ttest by pair of signatures per therapy
# radiation
tm.radiation.t <- tm.radiation[,6:36]
tm.radiation.t.df <- data.frame(matrix(NA, nrow=31, ncol=31), row.names=noquote(order))
colnames(tm.radiation.t.df) <- noquote(order)
for (i in 1:(ncol(tm.radiation.t)-1)) {
for (j in (i+1):ncol(tm.radiation.t)) {
p <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
tm.radiation.t.df[i,j] <- p.adjust(p, method="BH")
}
}
View(tm.radiation.t.df)
p
p.adjust(p, method="BH")
tm.radiation.t.dfadj <- p.adjust(unlist(tm.radiation.t.df), method="BH")
View(tm.radiation.t.dfadj)
?as.dist
?p.adjust
head(pt)
head(tp)
head(tp.clin)
head(tp.clin)
table(tp.clin$pathologic_m)
table(tp.clin$pathologic_n)
table(tp.clin$pathologic_t)
table(tm.clin$pathologic_m)
table(tm.clin$pathologic_n)
table(tm.clin$pathologic_t)
colnames(tp.clin)
#--------- ~~T/N/M Stage TP -------
tp.tnm <- tp.clin[, c(1:2, 45,46,48, 71:101)]
colnames(tp.tnm)
tp.tnm$t <- tp.tnm$pathologic_t
tp.tnm$n <- tp.tnm$pathologic_n
tp.tnm$m <- tp.tnm$pathologic_m
head(tp.tnm)
table(tp.tnm$n)
table(tp.tnm$t)
table(tp.tnm$m)
dim(tp.tnm)
table(tp.tnm$m, useNA="always")
table(tp.tnm$n, useNA="always")
table(tp.tnm$t, useNA="always")
i
j
#tm.radiation.t.df <- data.frame(matrix(NA, nrow=31, ncol=31), row.names=noquote(order))
test.df <- data.frame(sig1=NA, sig2=NA, pval=NA)
head(test.df)
head(tm.radiation.t)
# ttest by pair of signatures per therapy
# radiation
tm.radiation.t <- tm.radiation[,6:36]
test.df <- data.frame(sig1=NA, sig2=NA, pval=NA)
for (i in 1:(ncol(tm.radiation.t)-1)) {
for (j in (i+1):ncol(tm.radiation.t)) {
#tm.radiation.t.df[i,j] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
k <- 1
test.df[k,1] <- colnames(tm.radiation.t)[i]
test.df[k,2] <- colnames(tm.radiation.t)[j]
test.df[k,3] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
k <- k+1
}
}
View(test.df)
k
k <- 1
# ttest by pair of signatures per therapy
# radiation
tm.radiation.t <- tm.radiation[,6:36]
test.df <- data.frame(sig1=NA, sig2=NA, pval=NA)
for (i in 1:(ncol(tm.radiation.t)-1)) {
for (j in (i+1):ncol(tm.radiation.t)) {
#tm.radiation.t.df[i,j] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
test.df[k,1] <- colnames(tm.radiation.t)[i]
test.df[k,2] <- colnames(tm.radiation.t)[j]
test.df[k,3] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
k <- k+1
}
}
k
View(test.df)
tm.radiation.tdf <- data.frame(sig1=NA, sig2=NA, pval=NA)
# ttest by pair of signatures per therapy
# radiation
tm.radiation.t <- tm.radiation[,6:36]
k <- 1
for (i in 1:(ncol(tm.radiation.t)-1)) {
for (j in (i+1):ncol(tm.radiation.t)) {
#tm.radiation.t.df[i,j] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
test.df[k,1] <- colnames(tm.radiation.t)[i]
test.df[k,2] <- colnames(tm.radiation.t)[j]
test.df[k,3] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
k <- k+1
}
}
#tm.radiation.t.df <- data.frame(matrix(NA, nrow=31, ncol=31), row.names=noquote(order))
#colnames(tm.radiation.t.df) <- noquote(order)
tm.radiation.tdf <- data.frame(sig1=NA, sig2=NA, pval=NA)
head(tm.radiation.tdf)
k <- 1
for (i in 1:(ncol(tm.radiation.t)-1)) {
for (j in (i+1):ncol(tm.radiation.t)) {
#tm.radiation.t.df[i,j] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
tm.radiation.tdf[k,1] <- colnames(tm.radiation.t)[i]
tm.radiation.tdf[k,2] <- colnames(tm.radiation.t)[j]
tm.radiation.tdf[k,3] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
k <- k+1
}
}
head(tm.radiation.tdf)
tm.radiation.tdf$padj <- p.adjust(tm.radiation.tdf$pval, method="BH")
head(tm.radiation.tdf)
if (tm.radiation.tdf$padj < 0.05) tm.radiation.tdf$sign <- "*"
sapply(if (tm.radiation.tdf$padj < 0.05) tm.radiation.tdf$sign <- "*")
head(tm.radiation.tdf)
View(tm.radiation.tdf)
#tm.radiation.t.df <- data.frame(matrix(NA, nrow=31, ncol=31), row.names=noquote(order))
#colnames(tm.radiation.t.df) <- noquote(order)
tm.radiation.tdf <- data.frame(sig1=NA, sig2=NA, pval=NA)
k <- 1
for (i in 1:(ncol(tm.radiation.t)-1)) {
for (j in (i+1):ncol(tm.radiation.t)) {
#tm.radiation.t.df[i,j] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
tm.radiation.tdf[k,1] <- colnames(tm.radiation.t)[i]
tm.radiation.tdf[k,2] <- colnames(tm.radiation.t)[j]
tm.radiation.tdf[k,3] <- t.test(tm.radiation.t[,i], tm.radiation.t[,j])$p.value
k <- k+1
}
}
tm.radiation.tdf$padj <- p.adjust(tm.radiation.tdf$pval, method="BH")
# interferon
tm.interferon.t <- tm.interferon[,6:36]
#tm.interferon.t.df <- data.frame(matrix(NA, nrow=31, ncol=31), row.names=noquote(order))
#colnames(tm.interferon.t.df) <- noquote(order)
tm.interferon.tdf <- data.frame(sig1=NA, sig2=NA, pval=NA)
k <- 1
for (i in 1:(ncol(tm.interferon.t)-1)) {
for (j in (i+1):ncol(tm.interferon.t)) {
#tm.interferon.t.df[i,j] <- t.test(tm.interferon.t[,i], tm.interferon.t[,j])$p.value
tm.interferon.tdf[k,1] <- colnames(tm.interferon.t)[i]
tm.interferon.tdf[k,2] <- colnames(tm.interferon.t)[j]
tm.interferon.tdf[k,3] <- t.test(tm.interferon.t[,i], tm.interferon.t[,j])$p.value
k <- k+1
}
}
tm.interferon.tdf$padj <- p.adjust(tm.interferon.tdf$pval, method="BH")
head(tm.interferon.tdf)
tm.radiation.tdf$sign <- tm.radiaton.tdf$padj
tm.radiation.tdf$sign <- tm.radiation.tdf$padj
head(tm.radiation.tdf)
tm.radiation.tdf$sign <- sapply(x, function(x) ifelse(x<0.05, "*", ""))
tm.radiation.tdf$sign <- sapply(tm.radiation.tdf$padj, function(x) ifelse(x<0.05, "*", ""))
head(tm.radiation.tdf)
tm.interferon.tdf$sign <- sapply(tm.interferon.tdf$padj, function(x) ifelse(x<0.05, "*", ""))
write.csv(tm.interferon.tdf, file="./Output/TCGA_SKCM_TM_interferon_eachsigttest.csv")
write.csv(tm.radiation.tdf, file="./Output/TCGA_SKCM_TM_radiation_eachsigttest.csv")
t.test(tm.interferon$S8,tm.interferon$S9)$p.value
t.test(tm.interferon$S8,tm.interferon$S9)
head(tm.interferon$S18)
head(tm.interferon$S8)
tm.interferon$S8
tm.interferon$S9
tm.interferon$S10
# Loop to remove a, b, c specifications of tnm stage
for (i in 1:nrow(tp.tnm)) {
if (grepl("a", tp.tnm$t[i], ignore.case = TRUE) | grepl("b", tp.tnm$t[i], ignore.case = TRUE) |
grepl("c", tp.tnm$t[i], ignore.case = TRUE)) {
tp.tnm$t[i] <- substr(tp.tnm$t[i], 1, nchar(tp.tnm$t[i])-1)
}
else {
tp.tnm$t[i] <- tp.tnm$t[i]
}
}
for (i in 1:nrow(tp.tnm)) {
if (grepl("a", tp.tnm$n[i], ignore.case = TRUE) | grepl("b", tp.tnm$n[i], ignore.case = TRUE) |
grepl("c", tp.tnm$n[i], ignore.case = TRUE)) {
tp.tnm$n[i] <- substr(tp.tnm$n[i], 1, nchar(tp.tnm$n[i])-1)
}
else {
tp.tnm$n[i] <- tp.tnm$n[i]
}
}
for (i in 1:nrow(tp.tnm)) {
if (grepl("a", tp.tnm$m[i], ignore.case = TRUE) | grepl("b", tp.tnm$m[i], ignore.case = TRUE) |
grepl("c", tp.tnm$m[i], ignore.case = TRUE)) {
tp.tnm$m[i] <- substr(tp.tnm$m[i], 1, nchar(tp.tnm$m[i])-1)
}
else {
tp.tnm$m[i] <- tp.tnm$m[i]
}
}
head(tp.tnm)
table(tp.tnm$t, useNA="al")
table(tp.tnm$n, useNA="al")
table(tp.tnm$m, useNA="al")
tp.tnm[which(tp.tnm$t==NA),]
tp.tnm[is.na(tp.tnm$t),]
tp.tnm[is.na(tp.tnm$m),]
tp.tnm[is.na(tp.tnm$n),]
load("./Data/TCGA_UCM_clinical.RData")
load("./Output/TCGA_UVM_TP_stage.RData")
head(tp.clin)
colnames(tp.clin)
colnames(clin)
load("./Data/TCGA_UCM_clinical.RData")
load("./Data/TCGA_UVM_clinical.RData")
colnames(clin)
# Mutsigs data frame with patient id column
tp_uvm <- as.data.frame(weight_tp[,which(colSums(weight.tp)>0)])
tp_uvm$patient_id <- sapply(rownames(tp_uvm), function(x) as.factor(tolower(strsplit(x,"-")[[1]][3])))
# Download data:
UVM.clin = Samples.Clinical(format = "csv",
cohort = "UVM",
page_size=2000)
save(SKCM.clin, file="./Data/TCGA_UVM_clinical.RData")
# Create variables with both clinical and signatures data
clin <- merge(UVM.clin, tp_uvm, by="patient_id")
write.csv(clin, file="./Output/TCGA_UVM_TP_clinical.RData")
colnames(clin)
table(clin$clinical_t, useNA="al")
table(clin$clinical_m, useNA="al")
table(clin$clinical_n, useNA="al")
#--------- ~~T/N/M Stage TP -------
tnm <- clin[, c(1:2, 13, 14, 16, 97:127)]
tnm$t <- tnm$clinical_t
tnm$n <- tnm$clinical_n
tnm$m <- tnm$clinical_m
# Loop to remove a, b, c specifications of tnm stage
for (i in 1:nrow(tnm)) {
if (grepl("a", tnm$t[i], ignore.case = TRUE) | grepl("b", tnm$t[i], ignore.case = TRUE) |
grepl("c", tnm$t[i], ignore.case = TRUE)) {
tnm$t[i] <- substr(tnm$t[i], 1, nchar(tnm$t[i])-1)
}
else {
tnm$t[i] <- tnm$t[i]
}
}
for (i in 1:nrow(tnm)) {
if (grepl("a", tnm$n[i], ignore.case = TRUE) | grepl("b", tnm$n[i], ignore.case = TRUE) |
grepl("c", tnm$n[i], ignore.case = TRUE)) {
tnm$n[i] <- substr(tnm$n[i], 1, nchar(tnm$n[i])-1)
}
else {
tnm$n[i] <- tnm$n[i]
}
}
for (i in 1:nrow(tnm)) {
if (grepl("a", tnm$m[i], ignore.case = TRUE) | grepl("b", tnm$m[i], ignore.case = TRUE) |
grepl("c", tnm$m[i], ignore.case = TRUE)) {
tnm$m[i] <- substr(tnm$m[i], 1, nchar(tnm$m[i])-1)
}
else {
tnm$m[i] <- tnm$m[i]
}
}
#--------- ~~T/N/M Stage TM -------
tm.tnm <- tm.clin[, c(1:2, 45,46,48, 71:101)]
tm.tnm$t <- tm.tnm$pathologic_t
tm.tnm$n <- tm.tnm$pathologic_n
tm.tnm$m <- tm.tnm$pathologic_m
# Loop to remove a, b, c specifications of tnm stage
for (i in 1:nrow(tm.tnm)) {
if (grepl("a", tm.tnm$t[i], ignore.case = TRUE) | grepl("b", tm.tnm$t[i], ignore.case = TRUE) |
grepl("c", tm.tnm$t[i], ignore.case = TRUE)) {
tm.tnm$t[i] <- substr(tm.tnm$t[i], 1, nchar(tm.tnm$t[i])-1)
}
else {
tm.tnm$t[i] <- tm.tnm$t[i]
}
}
for (i in 1:nrow(tm.tnm)) {
if (grepl("a", tm.tnm$n[i], ignore.case = TRUE) | grepl("b", tm.tnm$n[i], ignore.case = TRUE) |
grepl("c", tm.tnm$n[i], ignore.case = TRUE)) {
tm.tnm$n[i] <- substr(tm.tnm$n[i], 1, nchar(tm.tnm$n[i])-1)
}
else {
tm.tnm$n[i] <- tm.tnm$n[i]
}
}
for (i in 1:nrow(tm.tnm)) {
if (grepl("a", tm.tnm$m[i], ignore.case = TRUE) | grepl("b", tm.tnm$m[i], ignore.case = TRUE) |
grepl("c", tm.tnm$m[i], ignore.case = TRUE)) {
tm.tnm$m[i] <- substr(tm.tnm$m[i], 1, nchar(tm.tnm$m[i])-1)
}
else {
tm.tnm$m[i] <- tm.tnm$m[i]
}
}
table(tp.tnm$t, useNA="al")
table(tm.tnm$t, useNA="al")
table(tnm$t, useNA="al")
# Loop to remove a, b, c specifications of tnm stage
for (i in 1:nrow(tnm)) {
if (grepl("a", tnm$t[i], ignore.case = TRUE) | grepl("b", tnm$t[i], ignore.case = TRUE) |
grepl("c", tnm$t[i], ignore.case = TRUE)) {
tnm$t[i] <- substr(tnm$t[i], 1, nchar(tnm$t[i])-1)
}
else {
tnm$t[i] <- tnm$t[i]
}
}
table(tnm$t, useNA="al")
table(tm.tnm$pathologic_t)
if (grepl("a", tnm$t[i], ignore.case = TRUE) | grepl("b", tnm$t[i], ignore.case = TRUE) |
grepl("c", tnm$t[i], ignore.case = TRUE) | grepl("d", tnm$t[i], ignore.case = TRUE) | grepl("e", tnm$t[i], ignore.case = TRUE)) {
tnm$t[i] <- substr(tnm$t[i], 1, nchar(tnm$t[i])-1)
}
table(tnm$t, useNA="al")
# Loop to remove a, b, c specifications of tnm stage
for (i in 1:nrow(tnm)) {
if (grepl("a", tnm$t[i], ignore.case = TRUE) | grepl("b", tnm$t[i], ignore.case = TRUE) |
grepl("c", tnm$t[i], ignore.case = TRUE) | grepl("d", tnm$t[i], ignore.case = TRUE) |
grepl("e", tnm$t[i], ignore.case = TRUE)) {
tnm$t[i] <- substr(tnm$t[i], 1, nchar(tnm$t[i])-1)
}
else {
tnm$t[i] <- tnm$t[i]
}
}
table(tnm$t, useNA="al")
table(tp.tnm$t, useNA="al")
table(tm.tnm$t, useNA="al")
table(tnm$t, useNA="al")
table(tp.tnm$m, useNA="al")
table(tm.tnm$m, useNA="al")
table(tnm$m, useNA="al")
table(tp.tnm$n, useNA="al")
table(tm.tnm$n, useNA="al")
table(tnm$n, useNA="al")
1/104
1/104*100
5/104*100
10/104*100
86/104*100
2/104*100
99/104*100
3/104*100
58/104*100
8/104*100
12/104*100
15/104*100
23/363*100
41/363*100
73/363*100
79/363*100
65/363*100
8/363*100
47/363*100
27/363*100
316/363*100
21/363*100
26/363*100
176/363*100
65/363*100
38/363*100
43/363*100
21/363*100
2/363*100
20/363*100
35/80*100
38/80*100
2/80*100
73/80*100
3/80*100
4/80*100
76/80*100
