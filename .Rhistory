ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 1), rho=0.98, s=0.1, mu=0)
ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 1), rho=0.98, s=0.1, mu=0)
ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 1), rho=0.98, s=0.1, mu=0)
ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 0.2), rho=0.98, s=0.1, mu=0)
ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 0.2), rho=0.98, s=0.0001, mu=0)
ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 0.2), rho=0.98, s=0.0001, mu=0)
ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 0.2), rho=0.98, s=0.0001, mu=0)
ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 0.2), rho=0.98, s=0.0001, mu=0)
ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 0.2), rho=0.98, s=0.0001, mu=0)
ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 0.2), rho=0.98, s=0.0001, mu=0)
ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 0.2), rho=0.98, s=0.0001, mu=0)
ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 0.2), rho=0.98, s=0.0001, mu=0)
ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 0.2), rho=0.98, s=0.0001, mu=0)
ldsel(ngen=100, nall=117, init=c(0.5, 0.01, 0.01, 0.2), rho=0.98, s=0.0001, mu=0)
R.version
library("BSgenome.Hsapiens.UCSC.hg38")
library("BSgenome.Hsapiens.UCSC.hg38")
library(deconstructSigs)
# GBM data
load("./Data/TCGA_GBM_mutations.RData")             # Raw TCGA mutation data
load("./Output/TCGA_GBM_snvs.RData")                # Selected SNVs
# Primary tumor
load("./Output/TCGA_GBM_TP_mutsig_input.RData")            # Mutation analysis input
load("./Output/TCGA_GBM_TP_weights_cut0.00.RData")     # Mutational signatures output
# LAML data
load("./Data/TCGA_LAML_mutations.RData")             # Raw TCGA mutation data
load("./Output/TCGA_LAML_snvs.RData")                # Selected SNVs
# Convert to deconstructSigs input:
gbm.sigs.input <- mut.to.sigs.input(mut.ref = gbm.snvs,
sample.id = "Tumor_Sample_Barcode",
chr = "Chromosome",
pos = "Start_Position",
ref = "Reference_Allele",
alt = "Tumor_Seq_Allele2",
bsg = BSgenome.Hsapiens.UCSC.hg38)
load("./Output/TCGA_GBM_snvs.RData")                # Selected SNVs
#--------- WD & LOAD FILES --------------------------------------------------------------------------------------------
setwd("C:/Users/rockp/Desktop/UCL/Project/Project-Laura")
# GBM data
load("./Data/TCGA_GBM_mutations.RData")             # Raw TCGA mutation data
load("./Output/TCGA_GBM_snvs.RData")                # Selected SNVs
# LAML data
load("./Data/TCGA_LAML_mutations.RData")             # Raw TCGA mutation data
load("./Output/TCGA_LAML_snvs.RData")                # Selected SNVs
# Convert to deconstructSigs input:
gbm.sigs.input <- mut.to.sigs.input(mut.ref = gbm.snvs,
sample.id = "Tumor_Sample_Barcode",
chr = "Chromosome",
pos = "Start_Position",
ref = "Reference_Allele",
alt = "Tumor_Seq_Allele2",
bsg = BSgenome.Hsapiens.UCSC.hg38)
head(gbm.sigs.input)
save(gbm.sigs.input, file="./Output/TCGA_GBM_mutsig_input.RData")
# Convert to deconstructSigs input:
laml.sigs.input <- mut.to.sigs.input(mut.ref = laml.snvs,
sample.id = "Tumor_Sample_Barcode",
chr = "Chromosome",
pos = "Start_Position",
ref = "Reference_Allele",
alt = "Tumor_Seq_Allele2",
bsg = BSgenome.Hsapiens.UCSC.hg38)
head(laml.sigs.input)
save(sigs.input, file="./Output/TCGA_GBM_TM_mutsig_input.RData")
save(laml.sigs.input, file="./Output/TCGA_LAML_mutsig_input.RData")
# Signatures
gbm.weights <- as.data.frame(t(sapply(rownames(gbm.sigs.input),
function(x) whichSignatures(tumor.ref = gbm.sigs.input,
signatures.ref = signatures.cosmic,
sample.id = x,
contexts.needed = TRUE,
signature.cutoff = 0.00,              # default = 0.06
tri.counts.method = 'default')$weights)),
row.names=rownames(gbm.sigs.input))
gbm.weight <- as.data.frame(sapply(gbm.weights, function(x) unlist(x)), row.names = rownames(weights))
head(gbm.weight)
# Change Signature.# to S#
colnames(gbm.weight) <- sapply(colnames(gbm.weight), function(x) paste0("S",strsplit(x, "\\.")[[1]][2]))
# Add unknown contribution column
gbm,weight$unknown <- (1-rowSums(gbm.weight))
# Add unknown contribution column
gbm.weight$unknown <- (1-rowSums(gbm.weight))
head(gbm.weight)
save(gbm.weight, file="./Output/TCGA_GBM_weights_cut0.00.RData")
# Sort by S1 (descending)
sorted <- gbm.weight[order(-gbm.weight$S1),]
# Sort by S1 (descending)
sorted <- gbm.weight[order(-gbm.weight$S1),]
# Reformatting the weights data
gbm.weight <- as.matrix(gbm.weight)
gbm.melted <- melt(gbm.weight)
colnames(gbm.melted) <- c("PatientId", "Signature", "weight")
gbm.melted <- melt(gbm.weight)
# Reformatting the weights data
gbm.weight <- as.matrix(gbm.weight)
gbm.melted <- melt(gbm.weight)
library(reshape2)
gbm.melted <- melt(gbm.weight)
colnames(gbm.melted) <- c("PatientId", "Signature", "weight")
melted$gbm.weight <- sapply(melted$gbm.weight, function(x) 100*x)
gbm.melted$weight <- sapply(melted$gbm.weight, function(x) 100*x)
gbm.melted$weight <- sapply(gbm.melted$weight, function(x) 100*x)
gbm.melted$weight <- sapply(gbm.melted$weight, function(x) 100*x)
head(gbm.melted)
dim(gbm.weight)
dim(gbm.weights)
# Remove non-contributing signatures
gbm.sorted <- as.matrix(gbm.sorted)
gbm.trim <- gbm.sorted[,which(colSums(gbm.sorted)>0)]
# Sort by S1 (descending)
gbm.sorted <- gbm.weight[order(-gbm.weight$S1),]
# GBM mutsigs
load("./Output/TCGA_GBM_mutsig_input.RData")            # Mutation analysis input
load("./Output/TCGA_GBM_weights_cut0.00.RData")     # Mutational signatures output
# Sort by S1 (descending)
gbm.sorted <- gbm.weight[order(-gbm.weight$S1),]
# Reformatting the weights data
gbm.weight <- as.matrix(gbm.weight)
head(sorted)
rm(sorted)
gbm.melted <- melt(gbm.weight)
colnames(gbm.melted) <- c("PatientId", "Signature", "weight")
gbm.melted$weight <- sapply(gbm.melted$weight, function(x) 100*x)
dim(gbm.melted)
dim(gbm.sorted)
# Remove non-contributing signatures
gbm.sorted <- as.matrix(gbm.sorted)
gbm.trim <- gbm.sorted[,which(colSums(gbm.sorted)>0)]
dim(gbm.trim)
gbm.melt <- melt(gbm.trim)
colnames(gbm.melt) <- c("PatientId", "Signature", "weight")
gbm.melt$weight <- sapply(gbm.melt$gbm.weight, function(x) 100*x)
head(gbm.melt)
# Remove non-contributing signatures
gbm.sorted <- as.matrix(gbm.sorted)
gbm.trim <- gbm.sorted[,which(colSums(gbm.sorted)>0)]
gbm.melt <- melt(gbm.trim)
head(gbm.melt)
colnames(gbm.melt) <- c("PatientId", "Signature", "weight")
head(gbm.melted)
head(gbm.trim)
head(gbm.sorted)
head(gbm.weight)
gbm.trim$S1
View(gbm.trim)
gbm.melt <- melt(gbm.trim)
colnames(gbm.melt) <- c("PatientId", "Signature", "weight")
gbm.melt$weight <- sapply(gbm.melt$gbm.weight, function(x) 100*x)
# Plot: stacked barplot signatures
colors <- c(brewer.pal(12, "Paired"), brewer.pal(11, "Set3"),"#000000")
colors2 <- c("#A6CEE3", "#1F78B4", "#B2DF8A", "#33A02C", "#FB9A99", "#E31A1C", "#FDBF6F", "#BFA89E", "#826C7F", "#FF7F00",
"#CAB2D6", "#8B786D", "#6A3D9A", "#D6DBD2", "#FFFF99", "#B15928", "#8DD3C7", "#FFFFB3", "#E75A7C", "#BEBADA",
"#FB8072", "#40476D", "#80B1D3", "#FDB462", "#B3DE69", "#258EA6", "#FCCDE5", "#D9D9D9", "#BC80BD", "#CCEBC5",
"#000000")
library(RColorBrewer)
# Plot: stacked barplot signatures
colors <- c(brewer.pal(12, "Paired"), brewer.pal(11, "Set3"),"#000000")
colors2 <- c("#A6CEE3", "#1F78B4", "#B2DF8A", "#33A02C", "#FB9A99", "#E31A1C", "#FDBF6F", "#BFA89E", "#826C7F", "#FF7F00",
"#CAB2D6", "#8B786D", "#6A3D9A", "#D6DBD2", "#FFFF99", "#B15928", "#8DD3C7", "#FFFFB3", "#E75A7C", "#BEBADA",
"#FB8072", "#40476D", "#80B1D3", "#FDB462", "#B3DE69", "#258EA6", "#FCCDE5", "#D9D9D9", "#BC80BD", "#CCEBC5",
"#000000")
ggplot(gbm.melt, aes(x=PatientId, y=gbm.weight, fill=Signature)) +
scale_fill_manual(values=colors2) +
geom_bar(stat="identity") +
ggtitle("Mutational signature analysis GBM primary tumor") +
xlab("Sample") +
ylab("Contribution (%)") +
coord_cartesian(ylim=c(0,100), expand=FALSE) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
library(deconstructSigs)
library(ggplot2)
library(pheatmap)
library(RColorBrewer)
library(survival)
require(FirebrowseR)
ggplot(gbm.melt, aes(x=Signature, y=gbm.weight)) +
geom_boxplot() +
ggtitle("Mutational signature analysis GBM primary tumor") +
xlab("Signatures") +
ylab("Contribution") +
coord_cartesian(ylim=c(0,100), expand=FALSE)
ggplot(gbm.melt, aes(x=Signature, y=weight)) +
geom_boxplot() +
ggtitle("Mutational signature analysis GBM primary tumor") +
xlab("Signatures") +
ylab("Contribution") +
coord_cartesian(ylim=c(0,100), expand=FALSE)
ggplot(gbm.melt, aes(x=PatientId, y=weight, fill=Signature)) +
scale_fill_manual(values=colors2) +
geom_bar(stat="identity") +
ggtitle("Mutational signature analysis GBM primary tumor") +
xlab("Sample") +
ylab("Contribution (%)") +
coord_cartesian(ylim=c(0,100), expand=FALSE) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
head(gbm.melt)
gbm.melt$weight <- sapply(gbm.melt$gbm.weight, function(x) 100*x)
gbm.melt$weight <- sapply(gbm.melt$weight, function(x) 100*x)
head(gbm.melt)
ggplot(gbm.melt, aes(x=PatientId, y=weight, fill=Signature)) +
scale_fill_manual(values=colors2) +
geom_bar(stat="identity") +
ggtitle("Mutational signature analysis GBM primary tumor") +
xlab("Sample") +
ylab("Contribution (%)") +
coord_cartesian(ylim=c(0,100), expand=FALSE) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
table(gbm.snvs$Sample_Type)
table(laml.snvs$Sample_Type)
dim(gbm.weight)
# Convert to deconstructSigs input:
laml.sigs.input <- mut.to.sigs.input(mut.ref = laml.snvs,
sample.id = "Tumor_Sample_Barcode",
chr = "Chromosome",
pos = "Start_Position",
ref = "Reference_Allele",
alt = "Tumor_Seq_Allele2",
bsg = BSgenome.Hsapiens.UCSC.hg38)
save(laml.sigs.input, file="./Output/TCGA_LAML_mutsig_input.RData")
# Signatures
laml.weights <- as.data.frame(t(sapply(rownames(laml.sigs.input),
function(x) whichSignatures(tumor.ref = laml.sigs.input,
signatures.ref = signatures.cosmic,
sample.id = x,
contexts.needed = TRUE,
signature.cutoff = 0.00,              # default = 0.06
tri.counts.method = 'default')$weights)),
row.names=rownames(laml.sigs.input))
laml.weight <- as.data.frame(sapply(laml.weights, function(x) unlist(x)), row.names = rownames(laml.weights))
# Change Signature.# to S#
colnames(laml.weight) <- sapply(colnames(laml.weight), function(x) paste0("S",strsplit(x, "\\.")[[1]][2]))
# Add unknown contribution column
laml.weight$unknown <- (1-rowSums(laml.weight))
save(weight, file="./Output/TCGA_LAML_weights_cut0.00.RData")
save(laml.weight, file="./Output/TCGA_LAML_weights_cut0.00.RData")
dim(laml.weight)
pdf("./Figures/TCGA_GBM_TP_mutsig.pdf", w=10, h=6)
ggplot(gbm.melt, aes(x=PatientId, y=weight, fill=Signature)) +
scale_fill_manual(values=colors2) +
geom_bar(stat="identity") +
ggtitle("Mutational signature analysis GBM primary tumor") +
xlab("Sample") +
ylab("Contribution (%)") +
coord_cartesian(ylim=c(0,100), expand=FALSE) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
dev.off()
ggplot(gbm.melt, aes(x=Signature, y=weight)) +
geom_boxplot() +
ggtitle("Mutational signature analysis GBM primary tumor") +
xlab("Signatures") +
ylab("Contribution") +
coord_cartesian(ylim=c(0,100), expand=FALSE)
pdf("./Figures/TCGA_GBM_TP_mutsigs_boxplot.pdf", w=10, h=6)
ggplot(gbm.melt, aes(x=Signature, y=weight)) +
geom_boxplot() +
ggtitle("Mutational signature analysis GBM primary tumor") +
xlab("Signatures") +
ylab("Contribution") +
coord_cartesian(ylim=c(0,100), expand=FALSE)
dev.off()
# Plot: heatmap
gbm.melted$weight <- as.numeric(gbm.melted$weight)
gbm.mat <- acast(PatientId~Signature,data=melted, value="weight", fun.aggregate=mean)
gbm.mat <- acast(PatientId~Signature,data=gbm.melted, value="weight", fun.aggregate=mean)
pdf("./Figures/TCGA_GBM_mutsigs_heatmap.pdf", w=10, h=6, onefile=FALSE)
p <- pheatmap(t(gbm.mat), show_colnames = FALSE, main="Mutational signatures GBM primary tumor")
dev.off()
dev.off()
dev.off()
gbm.mat <- acast(PatientId~Signature,data=gbm.melted, value="weight", fun.aggregate=mean)
pdf("./Figures/TCGA_GBM_mutsigs_heatmap.pdf", w=10, h=6, onefile=FALSE)
p <- pheatmap(t(gbm.mat), show_colnames = FALSE, main="Mutational signatures GBM primary tumor")
dev.off()
gbm.means <- data.frame(Signatures=c(colnames(gbm.trim)), value=c(colMeans(gbm.trim)*100))
ggplot(gbm.means, aes(x=reorder(Signatures, -value), y=value)) +
geom_bar(stat="identity", fill="dark blue") +
ggtitle("Mean mutational signature contributions GBM primary") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5)) +
coord_cartesian(ylim=c(0,70), expand=FALSE)
pdf("./Figures/TCGA_GBM_TM_mutsigs_avg.pdf", w=13, h=6)
ggplot(gbm.means, aes(x=reorder(Signatures, -value), y=value)) +
geom_bar(stat="identity", fill="dark blue") +
ggtitle("Mean mutational signature contributions GBM primary") +
xlab("Signatures") +
ylab("Mean contribution (%)") +
scale_y_continuous(breaks=seq(0,100,5)) +
coord_cartesian(ylim=c(0,70), expand=FALSE)
dev.off()
save(means.tm, file="./Output/TCGA_GBM_TP_mutsigs_means.RData")
save(gbm.means, file="./Output/TCGA_GBM_TP_mutsigs_means.RData")
# Clinical and mutsigs data
load("./Output/TCGA_SKCM_TP_clinical.RData")    # SKCM TP
load("./Output/TCGA_SKCM_TM_clinical.RData")    # SKCM TM
# Stage
load("./Output/TCGA_SKCM_TP_stage.RData")       # SKCM TP
load("./Output/TCGA_SKCM_TM_stage.RData")       # SKCM TM
# Mutsigs, metscores, and stage
load("./Output/TCGA_SKCM_TP_metastatic_score_stage.RData")  # SKCM TP
load("./Output/TCGA_SKCM_TM_metastatic_score_stage.RData")  # SKCM TM
# Survival
load("./Output/TCGA_SKCM_TP_survival.RData")        # SKCM TP
load("./Output/TCGA_SKCM_TM_survival.RData")        # SKCM TM
head(tp.surv)
colnames(tp.surv)
quantile(tp.surv$metscore)
quantile(tp.surv$metscore)[2]
quantile(tp.surv$metscore)[4]
# High vs. Low by quantiles
tp.surv$met_potential_quant <- NA
for (i in 1:nrow(tp.surv)) {
if (tp.surv$metscore[i] < quantile(tp.surv$metscore)[2]) {
tp.surv$met_potential_quant[i] <- "low"
}
else if (tp.surv$metscore[i] > quantile(tp.surv$metscore)[4]) {
tp.surv$met_potential_quant[i] <- "high"
}
else {
tp.surv$met_potential_quant[i] <- "intermediate"
}
}
head(tp.surv)
tp.surv.quant <- tp.surv[which(tp.surv$met_potential_quant=="low" | tp.surv$met_potential_quant=="high"),]
dim(tp.surv)
dim(tp.surv.quant)
table(tp.surv.quant$met_potential_quant)
tp.quant.fitKM <- survfit(Surv(days_to_death, vital_status)~met_potential_quant,
data=tp.surv.quant)
summary(tp.quant.fitKM)
plot(tp.quant.fitKM, col=c("red","blue"),
mark.time = TRUE,
main="SKCM TP overall survival by metastatic potential",
xlab="Survival time (days)", ylab="% Overall survival")
legend("topright", legend = c("High metastatic potential", "Low metastatic potential"), fill=c("red","blue"))
pdf("./Figures/TCGA_SKCM_TP_metpotential_survival_KM_quant.pdf", w=8, h=6)
plot(tp.quant.fitKM, col=c("red","blue"),
mark.time = TRUE,
main="SKCM TP overall survival by metastatic potential",
xlab="Survival time (days)", ylab="% Overall survival")
legend("topright", legend = c("High metastatic potential", "Low metastatic potential"), fill=c("red","blue"))
dev.off()
tp.metpot.quant.cox <- coxph(Surv(days_to_death, vital_status)~met_potential,
data=tp.surv.quant)
tp.metpot.quant.cox <- coxph(Surv(days_to_death, vital_status)~met_potential_quant,
data=tp.surv.quant)
summary(tp.metpot.quant.cox)
table(tp.surv.quant$met_potential_quant)
survdiff(Surv(days_to_death, vital_status)~met_potential_quant, data=tp.surv.quant, rho=0)
survdiff(Surv(days_to_death, vital_status)~met_potential_quant, data=tp.surv.quant, rho=1)
table(tp.surv.quant$met_potential_quant,useNA="al")
table(tp.surv.quant$vital_status,useNA="al")
table(tp.surv.quant$days_to_death,useNA="al")
table(tp.surv$days_to_death,useNA="al")
head(tp.clin)
table(tp.clin$days_to_death, useNA="al")
View(tp.surv[is.na(tp.surv$days_to_death),])
View(tp.surv[is.na(tp.surv$days_to_death),tp.surv$vital_status])
table(tp.surv.quant$days_to_death,useNA="al")
71+6+21
tp.surv.less <- tp.surv[!is.na(tp.surv$days_to_death),]
tp.less.fitKM <- survfit(Surv(days_to_death, vital_status)~met_potential,
data=tp.surv.less)
plot(tp.less.fitKM, col=c("red","blue"),
mark.time = TRUE,
main="SKCM TP overall survival by metastatic potential",
xlab="Survival time (days)", ylab="% Overall survival")
rm(tp.less.fit.KN)
rm(tp.less.fit.KM)
rm(tp.less.fitKM)
rm(tp.surv.less)
colnames(tp.surv)
View(tp.surv[is.na(tp.surv$days_to_death)],c(17,65))
View(tp.surv[is.na(tp.surv$days_to_death),c(17,65)])
# Replace NA with largest survival value = 1070
tp.surv$surv_cens <- NA
head(tp.surv$days_to_death)
tp.surv$surv_cens <- ifelse(is.na(tp.surv$days_to_death), 1070, tp.surv$days_to_death)
head(tp.surv$surv_cens)
tp.cens.fitKM <- survfit(Surv(surv_cens, vital_status)~met_potential,
data=tp.surv)
summary(tp.cens.fitKM)
plot(tp.cens.fitKM, col=c("red","blue"),
mark.time = TRUE,
main="SKCM TP overall survival by metastatic potential",
xlab="Survival time (days)", ylab="% Overall survival")
legend("topright", legend = c("High metastatic potential", "Low metastatic potential"), fill=c("red","blue"))
survdiff(Surv(surv_cens, vital_status)~met_potential, data=tp.surv, rho=1)
survdiff(Surv(surv_cens, vital_status)~met_potential, data=tp.surv, rho=0)
survdiff(Surv(surv_cens, vital_status)~met_potential, data=tp.surv, rho=1)
pdf("./Figures/TCGA_SKCM_TP_metpotential_survival_KM_cens.pdf", w=8, h=6)
plot(tp.cens.fitKM, col=c("red","blue"),
mark.time = TRUE,
main="SKCM TP overall survival by metastatic potential",
xlab="Survival time (days)", ylab="% Overall survival")
legend("topright", legend = c("High metastatic potential", "Low metastatic potential"), fill=c("red","blue"))
dev.off()
?legend
pdf("./Figures/TCGA_SKCM_TP_metpotential_survival_KM_cens.pdf", w=8, h=6)
plot(tp.cens.fitKM, col=c("red","blue"),
mark.time = TRUE,
main="SKCM TP overall survival by metastatic potential",
xlab="Survival time (days)", ylab="% Overall survival")
legend("bottomright", legend = c("High metastatic potential", "Low metastatic potential"), fill=c("red","blue"))
dev.off()
pdf("./Figures/TCGA_SKCM_TP_metpotential_survival_KM_cens.pdf", w=8, h=6)
plot(tp.cens.fitKM, col=c("red","blue"),
mark.time = TRUE,
main="SKCM TP overall survival by metastatic potential",
xlab="Survival time (days)", ylab="% Overall survival")
legend("bottomright", legend = c("High metastatic potential", "Low metastatic potential"), fill=c("red","blue"))
dev.off()
survdiff(Surv(surv_cens, vital_status)~met_potential, data=tp.surv, rho=0)
survdiff(Surv(surv_cens, vital_status)~met_potential, data=tp.surv, rho=1)
tp.surv.quant$surv_cens <- NA
tp.surv.quant$surv_cens <- ifelse(is.na(tp.surv.quant$days_to_death), 1070, tp.surv.quant$days_to_death)
survdiff(Surv(days_to_death, vital_status)~met_potential_quant, data=tp.surv.quant, rho=1)
tp.quant.fitKM <- survfit(Surv(surv_cens, vital_status)~met_potential_quant,
data=tp.surv.quant)
summary(tp.quant.fitKM)
legend("topright", legend = c("High metastatic potential", "Low metastatic potential"), fill=c("red","blue"))
legend("bottomright", legend = c("High metastatic potential", "Low metastatic potential"), fill=c("red","blue"))
pdf("./Figures/TCGA_SKCM_TP_metpotential_survival_KM_quant.pdf", w=8, h=6)
plot(tp.quant.fitKM, col=c("red","blue"),
mark.time = TRUE,
main="SKCM TP overall survival by metastatic potential",
xlab="Survival time (days)", ylab="% Overall survival")
legend("bottomright", legend = c("High metastatic potential", "Low metastatic potential"), fill=c("red","blue"))
dev.off()
tp.quant.fitKM <- survfit(Surv(days_to_death, vital_status)~met_potential_quant,
data=tp.surv.quant)
pdf("./Figures/TCGA_SKCM_TP_metpotential_survival_KM_quant.pdf", w=8, h=6)
plot(tp.quant.fitKM, col=c("red","blue"),
mark.time = TRUE,
main="SKCM TP overall survival by metastatic potential",
xlab="Survival time (days)", ylab="% Overall survival")
legend("bottomright", legend = c("High metastatic potential", "Low metastatic potential"), fill=c("red","blue"))
dev.off()
tp.quant.cens.fitKM <- survfit(Surv(surv_cens, vital_status)~met_potential_quant,
data=tp.surv.quant)
summary(tp.quant.cens.fitKM)
plot(tp.quant.cens.fitKM, col=c("red","blue"),
mark.time = TRUE,
main="SKCM TP overall survival by metastatic potential",
xlab="Survival time (days)", ylab="% Overall survival")
pdf("./Figures/TCGA_SKCM_TP_metpotential_survival_KM_quant_cens.pdf", w=8, h=6)
plot(tp.quant.cens.fitKM, col=c("red","blue"),
mark.time = TRUE,
main="SKCM TP overall survival by metastatic potential",
xlab="Survival time (days)", ylab="% Overall survival")
legend("bottomright", legend = c("High metastatic potential", "Low metastatic potential"), fill=c("red","blue"))
dev.off()
survdiff(Surv(days_to_death, vital_status)~met_potential_quant, data=tp.surv.quant, rho=0)
survdiff(Surv(days_to_death, vital_status)~met_potential_quant, data=tp.surv.quant, rho=1)
survdiff(Surv(surv_cens, vital_status)~met_potential_quant, data=tp.surv.quant, rho=1)
survdiff(Surv(surv_cens, vital_status)~met_potential_quant, data=tp.surv.quant, rho=0)
survdiff(Surv(surv_cens, vital_status)~met_potential_quant, data=tp.surv.quant, rho=1)
table(tp.surv$days_to_death[which(tp.surv$met_potential=="high")])
table(tp.surv$days_to_death[which(tp.surv$met_potential=="high")],useNA="al")
table(tp.surv$days_to_death[which(tp.surv$met_potential=="low")],useNA="al")
head(tp.surv)
# Model -- Mutsigs, one by one
tp.cox <- coxph(Surv(days_to_death, vital_status)~S7,
data=tp.surv)
summary(tp.cox)
tp.cox <- coxph(Surv(days_to_death, vital_status)~S1,
data=tp.surv)
summary(tp.cox)
tp.cox <- coxph(Surv(days_to_death, vital_status)~S11,
data=tp.surv)
summary(tp.cox)
tp.cox <- coxph(Surv(days_to_death, vital_status)~S23,
data=tp.surv)
summary(tp.cox)
tp.cox <- coxph(Surv(days_to_death, vital_status)~S6,
data=tp.surv)
summary(tp.cox)
tm.cox <- coxph(Surv(days_to_death, vital_status)~S7,
data=tm.surv)
summary(tm.cox)
tm.cox <- coxph(Surv(days_to_death, vital_status)~S1,
data=tm.surv)
summary(tm.cox)
tm.cox <- coxph(Surv(days_to_death, vital_status)~S11,
data=tm.surv)
summary(tm.cox)
tm.cox <- coxph(Surv(days_to_death, vital_status)~S23,
data=tm.surv)
summary(tm.cox)
tm.cox <- coxph(Surv(days_to_death, vital_status)~S6,
data=tm.surv)
summary(tm.cox)
# Model -- Mutsigs, one by one
tp.cox <- coxph(Surv(surv_cens, vital_status)~S7,
data=tp.surv)
summary(tp.cox)
RStudio.Version()
citation("ggplot2")
packageVersion("FirebrowseR")
packageVersion("TCGAbiolinks")
packageVersion("deconstructSigs")
packageVersion("ggplot2")
citation("survival")
packageVersion("survival")
packageVersion("BSgenome.Hsapiens.UCSC.hg38")
citation("BSgenome.Hsapiens.UCSC.hg38")
packageVersion("Bioconductor")
packageVersion("biocLite")
